# Simple approach - look for the problematic triple quote patterns manually\nwith open('mainlayout_fixed_newlines.py', 'r', encoding='utf-8') as f:\n    content = f.read()\n\n# Count \" and \"\"\" occurrences to understand the structure\nquote_count = content.count('\"')\ntriple_quote_count = content.count('\"\"\"')\n\nprint(f'Single quotes: {quote_count}')\nprint(f'Triple quotes: {triple_quote_count}')\n\n# Look for the pattern around the sample protocol specifically\nsample_start = content.find('sample_protocol = \"\"\"# Sample Security Policy')\nif sample_start != -1:\n    print(f'Found sample protocol at position: {sample_start}')\n    # Look for the end of this string in the next few thousand characters\n    sample_end = content.find('\"\"\"', sample_start + 20)\n    next_occurrence = content.find('\"\"\"', sample_end + 3)\n    print(f'Next triple quote after sample start: {next_occurrence}')\n    \n    # Get a section around the sample protocol\n    start = max(0, sample_start - 100)\n    end = min(len(content), sample_start + 1000)\n    section = content[start:end]\n    print(f'Section around sample protocol: {repr(section[:300])}...')\nelse:\n    print('Sample protocol not found with exact text')\n