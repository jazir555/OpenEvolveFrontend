/* Modern OpenEvolve CSS Styles */

/* Import modern font */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

/* CSS Custom Properties for Theming */
:root {
    /* Primary Colors */
    --primary: #6366f1;
    --primary-hover: #5855f7;
    --primary-light: #a5b4fc;
    --primary-dark: #4338ca;
    
    /* Semantic Colors */
    --secondary: #64748b;
    --success: #10b981;
    --warning: #f59e0b;
    --error: #ef4444;
    --info: #06b6d4;
    
    /* Background Colors */
    --bg-primary: #ffffff;
    --bg-secondary: #f8fafc;
    --bg-tertiary: #f1f5f9;
    --bg-quaternary: #e2e8f0;
    
    /* Text Colors */
    --text-primary: #1e293b;
    --text-secondary: #64748b;
    --text-light: #94a3b8;
    --text-muted: #cbd5e1;
    
    /* Border & Shadow */
    --border: #e2e8f0;
    --border-light: #f1f5f9;
    --border-dark: #cbd5e1;
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    
    /* Spacing & Sizing */
    --radius: 12px;
    --radius-sm: 8px;
    --radius-lg: 16px;
    --spacing-xs: 0.25rem;
    --spacing-sm: 0.5rem;
    --spacing-md: 1rem;
    --spacing-lg: 1.5rem;
    --spacing-xl: 2rem;
    --spacing-2xl: 3rem;
    
    /* Transitions */
    --transition-fast: 0.15s ease;
    --transition-normal: 0.2s ease;
    --transition-slow: 0.3s ease;
}

/* Dark Theme */
html[data-theme="dark"], [data-theme="dark"], .stApp[data-theme="dark"] {
    --bg-primary: #0f172a;
    --bg-secondary: #1e293b;
    --bg-tertiary: #334155;
    --bg-quaternary: #475569;
    
    --text-primary: #f8fafc;
    --text-secondary: #cbd5e1;
    --text-light: #94a3b8;
    --text-muted: #64748b;
    
    --border: #334155;
    --border-light: #475569;
    --border-dark: #1e293b;
    
    --primary: #818cf8;
    --primary-hover: #6366f1;
    --primary-light: #c7d2fe;
    --primary-dark: #4f46e5;
}

/* Base Styles */
* {
    box-sizing: border-box;
}

html, body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    line-height: 1.6;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    /* Force light theme as default */
    background-color: var(--bg-primary);
    color: var(--text-primary);
}





/* Streamlit App Override */
.stApp {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;
    background: var(--bg-secondary);
    color: var(--text-primary);
}

.main .block-container {
    padding: var(--spacing-xl) var(--spacing-md) !important;
    background-color: var(--bg-secondary) !important;
}

/* Ensure main content area respects theme */
.stApp > header,
.stApp > div > div > div.main,
.stApp > div > div > div.main > div,
.stApp > div > div > div.main > div > div,
.stApp > div > div > div.main > div > div > div {
    background-color: var(--bg-secondary) !important;
    color: var(--text-primary) !important;
}

/* Hide Streamlit Elements */
#MainMenu { visibility: hidden; }
footer { visibility: hidden; }
.stDeployButton { display: none; }
header[data-testid="stHeader"] { height: 0px; }

/* Typography */
h1, h2, h3, h4, h5, h6 {
    font-weight: 600;
    line-height: 1.25;
    margin: var(--spacing-lg) 0 var(--spacing-md) 0;
    color: var(--text-primary);
}
h1 { font-size: 2.25rem; }
h2 { font-size: 1.875rem; }
h3 { font-size: 1.5rem; }
h4 { font-size: 1.25rem; }
h5 { font-size: 1.125rem; }
h6 { font-size: 1rem; }

p {
    margin: var(--spacing-md) 0;
    color: var(--text-secondary);
}

/* Button Styles */
.stButton > button {
    background: var(--primary) !important;
    color: white !important;
    border: none !important;
    border-radius: var(--radius-sm) !important;
    padding: 0.75rem 1.5rem !important;
    font-weight: 500 !important;
    font-size: 0.875rem !important;
    font-family: inherit !important;
    transition: all var(--transition-normal) !important;
    box-shadow: var(--shadow-sm) !important;
    cursor: pointer !important;
    white-space: normal !important; /* Allow button text to wrap */
    word-wrap: break-word !important; /* Ensure long words break */
    overflow-wrap: break-word !important; /* Standard property for word wrapping */
}
.stButton > button:hover {
    background: var(--primary-hover) !important;
    box-shadow: var(--shadow-md) !important;
    transform: translateY(-1px) !important;
}
.stButton > button:active {
    transform: translateY(0) !important;
    box-shadow: var(--shadow-sm) !important;
}
.stButton > button:disabled {
    background: var(--bg-quaternary) !important;
    color: var(--text-muted) !important;
    cursor: not-allowed !important;
    transform: none !important;
    box-shadow: none !important;
}
/* Secondary Button Variant */
.stButton > button[kind="secondary"] {
    background: var(--bg-primary) !important;
    color: var(--text-primary) !important;
    border: 1px solid var(--border) !important;
}
.stButton > button[kind="secondary"]:hover {
    background: var(--bg-tertiary) !important;
    border-color: var(--border-dark) !important;
}

/* Input Styles */
.stApp [data-testid="stTextInput"] input,
.stApp [data-testid="stTextArea"] textarea,
.stApp [data-testid="stSelectbox"] select,
.stApp [data-testid="stNumberInput"] input,
input[type="text"],
input[type="password"],
input[type="email"],
input[type="number"],
textarea {
    background: #ffffff !important; /* Always white background */
    color: #1e293b !important; /* Always dark text */
    border: 1px solid var(--border) !important;
    border-radius: var(--radius-sm) !important;
    padding: 0.75rem !important;
    font-size: 0.875rem !important;
    font-family: inherit !important;
    transition: all var(--transition-normal) !important;
    box-sizing: border-box !important; /* Ensure padding is included in element's total width/height */
    word-wrap: break-word !important; /* Break long words to prevent overflow */
    overflow-wrap: break-word !important; /* Standard property for word wrapping */
    text-align: left !important; /* Explicitly left-align text */
    line-height: 1.5 !important; /* Ensure consistent line height for vertical alignment */
    white-space: normal !important; /* Allow text to wrap within inputs/textareas */
    overflow: hidden !important; /* Hide overflowing content */
    text-overflow: ellipsis !important; /* Show ellipsis for truncated text */
}
.stApp [data-testid="stTextInput"] input::placeholder,
.stApp [data-testid="stTextArea"] textarea::placeholder {
    color: var(--text-muted) !important;
}
.stApp [data-testid="stTextInput"] input:focus::placeholder,
.stApp [data-testid="stTextArea"] textarea:focus::placeholder {
    color: transparent !important; /* Hide placeholder on focus */
}

/* Ensure password input and eye icon are aligned correctly using flexbox */
[data-testid="stTextInput"] > div:has(input[type="password"]) {
    display: flex !important;
    align-items: center !important; /* Vertically center items */
    gap: 0.5rem !important; /* Space between input and icon */
}
/* Make the password input take up available space */
[data-testid="stTextInput"] input[type="password"] {
    flex-grow: 1 !important;
    padding-right: 0.75rem !important; /* Reset to default padding, flexbox manages space */
}
/* Style the eye icon button */
[data-testid="stTextInput"] button[data-testid="stTextInput-toggle-password-visibility"] {
    flex-shrink: 0 !important; /* Prevent button from shrinking */
    margin-left: auto !important; /* Push button to the right */
}
/* Radio Button Styles */
.stRadio > label {
    color: var(--text-primary);
}
.stRadio > label > div[data-testid="stMarkdownContainer"] {
    color: var(--text-primary); /* Ensure label text is themed */
}
.stRadio input[type="radio"] {
    appearance: none;
    -webkit-appearance: none;
    width: 18px;
    height: 18px;
    border: 2px solid var(--border); /* Visible border */
    border-radius: 50%;
    background-color: var(--bg-primary);
    transition: all var(--transition-normal);
    vertical-align: middle; /* Align with text */
    cursor: pointer;
    margin-right: 5px; /* Space between radio button and label */
}
.stRadio input[type="radio"]:checked {
    background-color: #6366f1 !important; /* Force blue fill */
    border-color: #6366f1 !important;
}
.stRadio input[type="radio"]:checked::after {
    content: '';
    display: block;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: var(--bg-primary); /* Inner dot color */
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
.stRadio input[type="radio"]:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgb(99 102 241 / 0.1); /* Focus ring */
}

/* Checkbox Styles */
.stCheckbox > label > div[data-testid="stMarkdownContainer"] {
    color: var(--text-primary) !important;
}
/* More specific checkbox styling to override defaults */
.stApp [data-testid="stCheckbox"] input[type="checkbox"] {
    background: var(--bg-primary) !important;
    border: 1px solid var(--border) !important;
    border-radius: var(--radius-sm) !important;
    appearance: none;
    -webkit-appearance: none;
    width: 16px;
    height: 16px;
    position: relative;
    top: 2px;
}
.stApp [data-testid="stCheckbox"] input[type="checkbox"]:checked {
    background: var(--primary) !important; /* Primary color when checked */
    border-color: var(--primary) !important;
}
.stApp [data-testid="stCheckbox"] input[type="checkbox"]:checked::after {
    content: 'âœ“';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white !important;
    font-size: 10px;
    font-weight: bold;
}
.stCheckbox [data-testid="stCheckbox"] svg {
    color: var(--bg-primary) !important; /* Checkmark color */
}

/* Custom Slider Styles */
.stSlider .st-bo { /* This is the filled track */
    background-color: var(--primary) !important; /* Use primary color */
}
.stSlider .st-bn { /* This is the empty track */
    background-color: var(--bg-quaternary) !important; /* Use a background color */
}
.stSlider .st-bq { /* This is the thumb */
    background-color: var(--primary) !important; /* Use primary color for thumb */
    border: 1px solid var(--primary-dark) !important; /* Darker primary for border */
}

/* Labels */
.stTextInput > label,
.stTextArea > label,
.stSelectbox > label,
.stNumberInput > label {
    color: var(--text-primary) !important;
    font-weight: 500 !important;
    font-size: 0.875rem !important;
    margin-bottom: var(--spacing-xs) !important;
}

/* Alerts */
.stAlert {
    border-radius: var(--radius-sm) !important;
    border: none !important;
    font-size: 0.875rem !important;
    padding: 1rem !important;
    margin: var(--spacing-md) 0 !important;
}
.stAlert[data-baseweb="notification"] {
    background: rgba(6, 182, 212, 0.1) !important;
    border-left: 4px solid var(--info) !important;
}
.stAlert[data-baseweb="notification"] *,
.stSuccess *,
.stWarning *,
.stError *,
.stInfo * {
    color: var(--text-primary) !important;
    opacity: 1 !important;
}
.stSuccess { background: rgba(16,185,129,0.1) !important; border-left: 4px solid var(--success) !important; }
.stWarning { background: rgba(245,158,11,0.1) !important; border-left: 4px solid var(--warning) !important; }
.stError { background: rgba(239,68,68,0.1) !important; border-left: 4px solid var(--error) !important; }
.stInfo { background: rgba(6,182,212,0.1) !important; border-left: 4px solid var(--info) !important; }
.stAlert::before, .stAlert::after { display: none !important; }

/* Tabs */
.stTabs [data-baseweb="tab-list"] {
    gap: var(--spacing-sm) !important;
    background: var(--bg-tertiary) !important;
    padding: var(--spacing-xs) !important;
    border-radius: var(--radius-sm) !important;
    border: 1px solid var(--border) !important;
}
.stTabs [data-baseweb="tab"] {
    background: transparent !important;
    border-radius: var(--radius-sm) !important;
    color: var(--text-secondary) !important;
    font-weight: 500 !important;
    padding: 0.75rem 1rem !important;
    border: none !important;
    transition: all var(--transition-normal) !important;
}
.stTabs [data-baseweb="tab"]:hover {
    background: var(--bg-primary) !important;
    color: var(--text-primary) !important;
}
.stTabs [aria-selected="true"] {
    background: var(--bg-primary) !important;
    color: var(--primary) !important;
    box-shadow: var(--shadow-sm) !important;
}

/* Ensure tab content areas are light */
.stTabs [data-testid="stHorizontalBlock"] {
    background: var(--bg-primary) !important;
}

/* Expanders */
.streamlit-expanderHeader {
    background: var(--bg-primary) !important;
    border: 1px solid var(--border) !important;
    border-radius: var(--radius-sm) !important;
    font-weight: 500 !important;
    color: var(--text-primary) !important;
    transition: all var(--transition-normal) !important;
}
.streamlit-expanderHeader:hover {
    background: var(--bg-tertiary) !important;
    border-color: var(--border-dark) !important;
}
.streamlit-expanderContent {
    background: var(--bg-primary) !important;
    color: var(--text-primary) !important;
    border: 1px solid var(--border) !important;
    border-top: none !important;
    border-radius: 0 0 var(--radius-sm) var(--radius-sm) !important;
    padding: var(--spacing-lg) !important;
}
/* Ensure content inside expanders is readable */
.streamlit-expanderContent * {
    color: var(--text-primary) !important;
}
/* More specific expander content styling */
div[data-testid="stExpander"] {
    background: var(--bg-primary) !important;
}
div[data-testid="stExpander"] details {
    background: var(--bg-primary) !important;
}
div[data-testid="stExpander"] summary {
    background: var(--bg-primary) !important;
    color: var(--text-primary) !important;
}

/* Containers */
.stContainer {
    background: var(--bg-primary) !important;
    border-radius: var(--radius) !important;
    padding: var(--spacing-lg) !important;
    margin: var(--spacing-md) 0 !important;
    transition: all var(--transition-normal) !important;
}
div[data-testid="stContainer"][style*="border"] {
    border: 1px solid var(--border) !important;
    box-shadow: var(--shadow-sm) !important;
}
div[data-testid="stContainer"][style*="border"]:hover {
    box-shadow: var(--shadow-md) !important;
    transform: translateY(-2px) !important;
}

/* Metrics */
[data-testid="metric-container"] {
    background: var(--bg-primary) !important;
    border: 1px solid var(--border) !important;
    border-radius: var(--radius-sm) !important;
    padding: var(--spacing-lg) !important;
    text-align: center !important;
    transition: all var(--transition-normal) !important;
}
[data-testid="metric-container"]:hover {
    box-shadow: var(--shadow-md) !important;
    transform: translateY(-2px) !important;
}
[data-testid="metric-container"] [data-testid="metric-value"] {
    font-size: 1.5rem !important;
    font-weight: 700 !important;
    color: var(--primary) !important;
}
[data-testid="metric-container"] [data-testid="metric-label"] {
    font-size: 0.875rem !important;
    color: var(--text-secondary) !important;
    font-weight: 500 !important;
}

/* Progress Bars */
.stProgress .st-bo { background-color: var(--primary) !important; border-radius: var(--radius-sm) !important; }
.stProgress .st-bn { background-color: var(--bg-quaternary) !important; border-radius: var(--radius-sm) !important; }

/* Code Blocks */
.stCodeBlock {
    background: var(--bg-tertiary) !important;
    border: 1px solid var(--border) !important;
    border-radius: var(--radius-sm) !important;
}
.stCodeBlock code {
    color: var(--text-primary) !important;
    font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace !important;
}

/* Sidebar */
.css-1d391kg {
    background: var(--bg-primary) !important;
    border-right: 1px solid var(--border) !important;
}

/* Selection */
::selection {
    background: rgba(99, 102, 241, 0.2) !important;
    color: var(--text-primary) !important;
}

/* Scrollbars */
::-webkit-scrollbar { width: 8px; height: 8px; }
::-webkit-scrollbar-track { background: var(--bg-tertiary); border-radius: var(--radius-sm); }
::-webkit-scrollbar-thumb { background: var(--border-dark); border-radius: var(--radius-sm); }
::-webkit-scrollbar-thumb:hover { background: var(--text-muted); }

/* Grids */
.grid-2 { display: grid; grid-template-columns: repeat(2, 1fr); gap: var(--spacing-lg); }
.grid-3 { display: grid; grid-template-columns: repeat(3, 1fr); gap: var(--spacing-lg); }
.grid-4 { display: grid; grid-template-columns: repeat(4, 1fr); gap: var(--spacing-lg); }
@media (max-width: 768px) { .grid-2, .grid-3, .grid-4 { grid-template-columns: 1fr; } }

/* Model Cards */
.model-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--spacing-lg);
    margin-top: var(--spacing-lg);
}
.model-card {
    background: var(--bg-primary);
    border: 1px solid var(--border);
    border-radius: var(--radius);
    padding: var(--spacing-lg);
    transition: all var(--transition-normal);
    position: relative;
    overflow: hidden;
}
.model-card::before {
    content: '';
    position: absolute;
    top: 0; left: 0; right: 0;
    height: 3px;
    background: linear-gradient(90deg, var(--primary), var(--primary-light));
    transform: scaleX(0);
    transition: transform var(--transition-normal);
    transform-origin: left;
}
.model-card:hover { box-shadow: var(--shadow-lg); transform: translateY(-4px); }
.model-card:hover::before { transform: scaleX(1); }
.model-card h4 {
    color: var(--primary);
    font-size: 1.125rem;
    font-weight: 600;
    margin: 0 0 var(--spacing-md) 0;
}
.model-card .metric {
    font-size: 0.875rem;
    color: var(--text-secondary);
    margin-bottom: var(--spacing-xs);
    display: flex;
    justify-content: space-between;
    align-items: center;
}
.model-card .metric strong { color: var(--text-primary); }
.model-card .progress-bar {
    background: var(--bg-quaternary);
    height: 6px;
    border-radius: 3px;
    overflow: hidden;
    margin-top: var(--spacing-md);
}
.model-card .progress-fill {
    background: linear-gradient(90deg, var(--primary), var(--primary-light));
    height: 100%;
    transition: width 0.5s ease;
    border-radius: 3px;
}

/* Status */
.status-running { color: var(--warning); font-weight: 500; }
.status-complete { color: var(--success); font-weight: 500; }
.status-error { color: var(--error); font-weight: 500; }
.status-idle { color: var(--text-secondary); font-weight: 500; }

/* Notifications */
.notification-container {
    position: fixed;
    top: var(--spacing-lg);
    right: var(--spacing-lg);
    z-index: 1000;
}
.notification-badge {
    background: var(--error);
    color: white;
    border-radius: 50%;
    padding: var(--spacing-xs) var(--spacing-sm);
    font-size: 0.75rem;
    font-weight: 600;
}

/* Animations */
@keyframes fadeInUp {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}
.fade-in { animation: fadeIn 0.3s ease forwards; }
.fade-in-up { animation: fadeInUp 0.3s ease forwards; }
